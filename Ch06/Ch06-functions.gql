//RETURN ROUND(1.567, 2)

//RETURN CARDINALITY([1,2,3])

//RETURN SIZE([1,2,3])

//RETURN LENGTH("Graph Query")

//RETURN CHAR_LENGTH("Graph Query")

//RETURN CHARACTOR_LENGTH("Graph Query") 

//RETURN LENGTH(x'1F')

//RETURN BYTE_LENGTH(x'00')

//RETURN OCTET_LENGTH(x'00') 

//MATCH p=()-[]-()-[]-() LIMIT 1 RETURN LEGNTH(p)

//MATCH p=()-[]-()-[]-() LIMIT 1 RETURN PATH_LENGTH(p)

//MATCH p=()-[]-()-[]-() LIMIT 1 RETURN CARDINALITY(p)

//RETURN LEGNTH({name : "GQL", year: 2024})

//RETURN REDIANS(60)

//RETURN DEGREES(pi())

//RETURN LEFT("Hello GQL", 5)

//RETURN RIGHT("Hello GQL", 3)

//RETURN LEFT(x'1F2F3F', 2)

//LET s = "Hello GQL"
//RETURN UPPER(s), LOWER(s)

//RETURN TRIM(BOTH " " FROM "  Hello GQL  ")	

//RETURN TRIM("  Hello GQL  ")

//RETURN TRIM(LEADING "_" FROM "__Hello GQL"), TRIM(TRAILING "_" FROM "Hello GQL__")

//RETURN TRIM(BOTH x'1F' FROM  x'1F2F1F1F')

//RETURN BTRIM("123123Hello GQL123123", "123")

//RETURN NORMALIZE("â‘ ", NFKC)

//RETURN LOCAL_DATETIME({year: 2024, month: 5, day: 15, hour: 10, minute: 30, second: 0})

//RETURN CURRENT_TIMESTAMP, LCOAL_TIMESTAMP

//MATCH (n:Lang)-(target:Category) RETURN COUNT(DISTINCT target)

//MATCH (c:Category) RETURN COUNT(c)

//MATCH (c:Category)-(n) RETURN COUNT(*)

//MATCH (g:Lang) 
//LET age = YEAR(CURRENT_DATE) - g.year RETURN MAX(age) as maxAge, MIN(age) as minAge, AVG(age) as averageAge, SUM(age) as sumAge

//FOR v IN [1, 2, 3, 10, 29, 30]
//RETURN STDDEV_SAMP(v) as sample_deviation, STDDEV_POP(v)  as population_deviation

//FOR v IN [10, 20, 30] RETURN PERCENTILE_CONT(v, 0.5)

//FOR v IN [10, 20, 30] RETURN PERCENTILE_CONT(v, 0.25)

//FOR v IN [10, 20, 30] RETURN PERCENTILE_DISC(v, 0.25)

//MATCH (n:Lang) RETURN COLLECT_LIST(n.name)

//RETURN TRIM([1,2,3,4,5], 2)

//MATCH p=()-[]-() RETURN ELEMENTS(p) LIMIT 1

//RETURN CAST("-123a" AS INT)

//RETURN CAST([1,2,3] AS STRING)

//LET v = [1,3,5] RETURN reduce(_sum = 0, item in v | _sum + item) 










